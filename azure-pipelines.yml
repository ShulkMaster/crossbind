# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - master
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  Configuration: 'Release'
  AntlrGen: '-visitor -listener -Dlanguage=CSharp -lib CrossBind.Compiler/Lang CrossBind.Compiler/Lang/Haibt.g4'
  AntlrOut: '-o CrossBind.Compiler/Parser'

jobs:
  - job: FrontendCompilerBuild
    displayName: 'Frontend Compiler Build'
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Restoring CrossBind Engine'
        inputs:
          command: 'restore'
          feedsToUse: 'select'
          projects: '**/*.csproj'
          vstsFeed: 'c02610e3-ed5a-4422-8dfc-732f5bdef937'

      - task: ExtractFiles@1
        displayName: 'Extracting DocFx'
        inputs:
          archiveFilePatterns: 'Gen/*.zip'
          destinationFolder: 'Gen'
          cleanDestinationFolder: false
          overwriteExistingFiles: false

      - task: JavaToolInstaller@0
        displayName: 'Installing Java JRE'
        inputs:
          versionSpec: '8'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo 'Building Antlr Source'
            java -jar Gen/antlr.jar $(AntlrGen) $(AntlrOut)

      - task: DotNetCoreCLI@2
        displayName: 'Compiling CrossBind Projects'
        inputs:
          command: 'build'
          projects: '**/!(*Test.csproj)'
          arguments: '--no-restore -c $(Configuration)'

      - task: DotNetCoreCLI@2
        displayName: 'Compiling CrossBind Test Projects'
        inputs:
          command: 'build'
          projects: '**/*Test.csproj'
          arguments: '--no-restore --no-dependencies -c $(Configuration)'

      - task: DotNetCoreCLI@2
        name: 'TestingEngine'
        displayName: 'Xunit: Testing Engine'
        inputs:
          command: 'test'
          projects: '**/*Test.csproj'
          arguments: '--configuration $(Configuration) --collect "Code coverage"'
          nobuild: true
          testRunTitle: 'TestingEngine'
          publishTestResults: true

      - task: DotNetCoreCLI@2
        name: 'PackagingEngine'
        displayName: 'Packaging Engine Plugin Interface'
        inputs:
          command: 'pack'
          packagesToPack: 'CrossBind.Engine/CrossBind.Engine.csproj'
          configuration: '$(Configuration)'
          nobuild: true
          includesymbols: true
          includesource: true
          packDirectory: '$(Build.ArtifactStagingDirectory)/Engine'
          versioningScheme: 'off'

      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo 'Building Docs Site'
            Gen/docfx.exe Docs/docfx.json -o $(Build.ArtifactStagingDirectory)/docs
         
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)
          ArtifactName: 'artifacs'
          publishLocation: 'Container'