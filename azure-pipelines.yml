# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- develop
pr:
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  Configuration: 'Release'
  CEngine: 'CrossBind.Engine/CrossBind.Engine.csproj'
  CEngineTest: 'CrossBind.Engine.Test/CrossBind.Engine.Test.csproj'

jobs:
  - job: PullRequest
    displayName: 'Pull Request Build Test'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Restoring CrossBind Engine'
        inputs:
          command: 'restore'
          feedsToUse: 'select'
          projects: 'CrossBind.Engine*/CrossBind.Engine*.csproj'
          vstsFeed: 'c02610e3-ed5a-4422-8dfc-732f5bdef937'
      - task: DotNetCoreCLI@2
        displayName: 'Compiling CrossBind Engine'
        inputs:
          command: 'build'
          projects: $(CEngine)
          arguments: '--no-restore -c $(Configuration) '
      - task: DotNetCoreCLI@2
        displayName: 'Compiling CrossBind Engine Test'
        inputs:
          command: 'build'
          projects: $(CEngineTest)
          arguments: '--no-restore --no-dependencies -c $(Configuration)'
      - task: DotNetCoreCLI@2
        name: 'TestingEngine'
        displayName: 'Xunit: TestingEngine'
        inputs:
          command: 'test'
          projects: $(CEngineTest)
          arguments: '--no-build --configuration $(Configuration)'
          testRunTitle: 'TestingEngine'
          publishTestResults: true
      - task: DotNetCoreCLI@2
        name: 'PackagingEngine'
        displayName: 'Packaging Engine Plugin Interface'
        inputs:
          command: 'pack'
          packagesToPack: $(CEngine)
          configuration: '$(Configuration)'
          nobuild: true
          includesymbols: true
          includesource: true
          packDirectory: '$(Build.ArtifactStagingDirectory)/Engine'
          versioningScheme: 'off'
  - job: FrontendCompiler
    displayName: 'Frontend Compiler Build Test'
    dependsOn: PullRequest
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo 'Hello world'
            ls CrossBind.Engine/bin/$(Configuration)
            ls CrossBind.Engine/bin/$(Configuration)/net6.0



